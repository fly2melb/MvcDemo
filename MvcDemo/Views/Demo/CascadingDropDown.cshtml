@model MvcDemo.ViewModels.CascadingDropDownViewModel

@{
    ViewBag.Title = "Cascading drop-down list";
}

<h2>@ViewBag.Title</h2>

<h3>
    <span class="label label-info">@ViewBag.Message</span>
</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.DropDownListFor(model =>
            model.ContinentId, new SelectList(Model.ContinentList, "Key", "Value", Model.ContinentId),
            "- Continent -", new { id = "continentId" })
        @Html.ValidationMessageFor(m => m.ContinentId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.DropDownListFor(model =>
            model.CountryId, new SelectList(Model.CountryList, "Key", "Value", Model.CountryId),
            "- Country -", new { id = "countryId" })
        @Html.ValidationMessageFor(m => m.CountryId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-sm btn-primary" />
    </div>
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
            $(function () {
                // Reload options of Country drop down list when Continent is changed.
                // Update values of 3 variables when re-using this method.
                $('#continentId').change(function () {
                    // Url of action to get options of child drop-down
                    var url = '@Url.Action("Countries")/' + $('#continentId').val();
                    // Element ID of child drop-down
                    var dropDownId = 'countryId';
                    // Default option of child drop-down
                    var defaultOption = '- Country -';

                    $.getJSON(url, function (data) {
                        var items = '<option value>' + defaultOption + '</option>';

                        $.each(data, function (i, item) {
                            // Value cannot contain single quote (').
                            items += '<option value="' + item.Value + '">' + item.Text + '</option>';
                        });

                        $('#' + dropDownId).html(items);

                    }).fail(function () {
                        // When failed, default option only
                        var items = '<option value>' + defaultOption + '</option>';

                        $('#' + dropDownId).html(items);
                    });
                });
            });
    </script>
}
